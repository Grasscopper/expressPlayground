{"ast":null,"code":"var _jsxFileName = \"/Users/grasscopper/playground/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport CharacterTiles from \"./CharacterTiles\";\n\nconst App = props => {\n  let [chars, setChars] = useState([]);\n  useEffect(() => {\n    fetch('/characters').then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        let errorMessage = `${response.status}: ${response.statusText}`;\n        let error = new Error(errorMessage);\n        throw error;\n      }\n    }).then(response => {\n      return response.json();\n    }).then(body => {\n      debugger;\n      setChars(body);\n    }).catch(error => {\n      console.error(`Error in fetch: ${error.message}`);\n    });\n  }, []);\n  let charTiles = chars.map(char => {\n    return /*#__PURE__*/React.createElement(CharacterTiles, {\n      name: char.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"App-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Welcome to React\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, game)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/grasscopper/playground/client/src/App.js"],"names":["React","useState","useEffect","CharacterTiles","App","props","chars","setChars","fetch","then","response","ok","errorMessage","status","statusText","error","Error","json","body","catch","console","message","charTiles","map","char","name","logo","game"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAAC,aAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAP;AACD,OAFD,MAEO;AACL,YAAIE,YAAY,GAAI,GAAEF,QAAQ,CAACG,MAAO,KAAIH,QAAQ,CAACI,UAAW,EAA9D;AACA,YAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,YAAV,CAAZ;AACA,cAAMG,KAAN;AACD;AACF,KATD,EAUCN,IAVD,CAUOC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,KAZD,EAaCR,IAbD,CAaOS,IAAD,IAAU;AACd;AACAX,MAAAA,QAAQ,CAACW,IAAD,CAAR;AACD,KAhBD,EAiBCC,KAjBD,CAiBQJ,KAAD,IAAW;AAChBK,MAAAA,OAAO,CAACL,KAAR,CAAe,mBAAkBA,KAAK,CAACM,OAAQ,EAA/C;AACD,KAnBD;AAoBD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,MAAIC,SAAS,GAAGhB,KAAK,CAACiB,GAAN,CAAWC,IAAD,IAAU;AAClC,wBACE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAI,CAACC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJe,CAAhB;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAHJ,CADA,CADF;AASD,CAxCD;;AA0CA,eAAevB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport CharacterTiles from \"./CharacterTiles\"\n\nconst App = (props) => {\n  let [chars, setChars] = useState([])\n  useEffect(() => {\n    fetch('/characters')\n    .then((response) => {\n      if (response.ok) {\n        return response\n      } else {\n        let errorMessage = `${response.status}: ${response.statusText}`\n        let error = new Error(errorMessage)\n        throw(error)\n      }\n    })\n    .then((response) => {\n      return response.json()\n    })\n    .then((body) => {\n      debugger\n      setChars(body)\n    })\n    .catch((error) => {\n      console.error(`Error in fetch: ${error.message}`)\n    })\n  }, [])\n\n  let charTiles = chars.map((char) => {\n    return (\n      <CharacterTiles name={char.name} />\n    )\n  })\n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">Welcome to React</h1>\n        <p>{game}</p>\n        </header>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}