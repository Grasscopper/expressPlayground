{"ast":null,"code":"var _jsxFileName = \"/Users/grasscopper/playground/react/src/containers/CharactersShowContainer.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst CharactersShowContainer = props => {\n  let charID = props.match.params.id;\n  useEffect(() => {\n    fetch(\"/characters/\").then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        let errorMessage = `${reponse.status}: ${response.statusText}`;\n        let error = new Error(errorMessage);\n        throw error;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Link and Zelda\");\n};\n\nexport default CharactersShowContainer;","map":{"version":3,"sources":["/Users/grasscopper/playground/react/src/containers/CharactersShowContainer.js"],"names":["React","useState","useEffect","CharactersShowContainer","props","charID","match","params","id","fetch","then","response","ok","errorMessage","reponse","status","statusText","error","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AACzC,MAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAhC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAP;AACD,OAFD,MAEO;AACL,YAAIE,YAAY,GAAI,GAAEC,OAAO,CAACC,MAAO,KAAIJ,QAAQ,CAACK,UAAW,EAA7D;AACA,YAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUL,YAAV,CAAZ;AACA,cAAMI,KAAN;AACD;AACF,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,CAjBD;;AAmBA,eAAed,uBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst CharactersShowContainer = (props) => {\n  let charID = props.match.params.id\n  useEffect(() => {\n    fetch(\"/characters/\")\n    .then((response) => {\n      if (response.ok) {\n        return response\n      } else {\n        let errorMessage = `${reponse.status}: ${response.statusText}`\n        let error = new Error(errorMessage)\n        throw(error)\n      }\n    })\n  }, [])\n  return (\n    <p>Link and Zelda</p>\n  )\n}\n\nexport default CharactersShowContainer\n"]},"metadata":{},"sourceType":"module"}